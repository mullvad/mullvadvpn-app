### Android properties ###
android.enableR8.fullMode=true
android.nonTransitiveRClass=false
android.useAndroidX=true


### Kotlin properties ###
kotlin.code.style=official


### Gradle properties ###
org.gradle.caching=true
org.gradle.jvmargs=-Xmx8192M -Dkotlin.daemon.jvm.options\="-Xmx8192M"
org.gradle.parallel=true


### Mullvad properties ###

# Show in app version notifications
mullvad.app.config.inAppVersionNotifications.enable=true

# Optional property to override the version name and code
# app.config.override.versionName=
# app.config.override.versionCode=

# Targets to build the daemon for
mullvad.app.build.cargo.targets=arm,arm64,x86,x86_64

# Perform a clean the cargo before each build
mullvad.app.build.cargo.cleanBuild=true

# If true, debug symbols are generated for release builds and not just debug builds.
mullvad.app.build.cargo.generateDebugSymbolsForReleaseBuilds=true

# Keep debug symbols if they exist. This will cause the debug artifacts
# to be substantially larger.
mullvad.app.build.keepDebugSymbols=false

# Replace source file path prefixes in the Rust build artifacts with fixed values.
# This must be set to true for the app build to be reprodcible, but should be set to false
# when debugging to the Rust native libs from Android Studio.
mullvad.app.build.replaceRustPathPrefix=true

# Enable/Disable boringtun
mullvad.app.build.boringtun.enable=false

## E2E tests ##

# To run e2e tests you need to provide credentails for the enviroment you
# are targeting. Either provide a partnerAuth that will automatically create
# accounts as needed or provide already valid credentaisl

#mullvad.test.e2e.prod.partnerAuth=
# OR
#mullvad.test.e2e.stagemole.accountNumber.valid=
#mullvad.test.e2e.stagemole.accountNumber.invalid=1234123412341234

#mullvad.test.e2e.stagemole.partnerAuth=
# OR
#mullvad.test.e2e.prod.accountNumber.valid=
#mullvad.test.e2e.prod.accountNumber.invalid=1234123412341234

# Run tests that require a valid google play test account
mullvad.test.e2e.config.billing.enable=false

# Run the highly rate limited tests, these will make the test run go for longer
# since it will have to be careful not to trigger the rate limiting.
mullvad.test.e2e.config.runHighlyRateLimitedTests=false

# Whether to enable tests dependent on RAAS (Router As A Service), if enabled
# you need to provide the rest of the `test.e2e.config.raas.*` properties.
mullvad.test.e2e.config.raas.enable=false
#
# IP to the machine running RAAS
#mullvad.test.e2e.config.raas.host=
#
# IP address or host to send traffic to
#mullvad.test.e2e.config.raas.trafficGenerator.target.host=
#
# Port 1-65532
#mullvad.test.e2e.config.raas.trafficGenerator.target.port=
