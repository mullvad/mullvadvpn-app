[versions]
# Android
# The android-gradle-aapt plugin version must be in sync with the android plugin version.
# Required for Gradle metadata verification to work properly, see:
# https://github.com/gradle/gradle/issues/19228
android-gradle-plugin = "8.9.1"
android-gradle-aapt = "12782657"
android-billingclient = "7.1.1"

# AndroidX
androidx-activitycompose = "1.10.1"
androidx-appcompat = "1.7.0"
androidx-ktx = "1.16.0"
androidx-credentials = "1.5.0"
androidx-coresplashscreen = "1.1.0-rc01"
androidx-datastore = "1.1.4"
androidx-espresso = "3.6.1"
androidx-lifecycle = "2.8.7"
androidx-test = "1.6.1"
androidx-testmonitor = "1.7.2"
androidx-testorchestrator = "1.5.1"
androidx-testrunner = "1.6.2"
androidx-uiautomator = "2.4.0-alpha01"
androidx-tv = "1.0.0"

# Arrow
arrow = "2.0.1"

# Compose
compose = "1.7.8"
compose-destinations = "2.1.0"
compose-constraintlayout = "1.1.1"
compose-material3 = "1.3.2"
compose-material-tv = "1.1.0-alpha01"
drawablepainter = "0.37.2"

# Update suppression for 'InvalidPackage' in config/lint.xml
grpc = "1.71.0"
grpc-kotlin = "1.4.1"
grpc-kotlin-jar = "1.4.1:jdk8@jar"

# Koin
koin = "4.0.4"
koin-compose = "4.0.4"

# Ktor
# Bumping to 3.1.0 causes an AbstractMethodError in the serialization logic (DROID-1820).
ktor = "3.0.3"

# Kotlin
# Bump kotlin and kotlin-ksp together, find matching release here:
# https://github.com/google/ksp/releases
kotlin = "2.1.20"
kotlin-ksp = "2.1.20-2.0.0"
kotlinx = "1.10.2"
kotlinx-serialization = "2.1.20"

# Protobuf
protobuf-gradle-plugin = "0.9.5"
protobuf = "4.30.2"

# Rust Android Gradle
rust-android-gradle = "0.9.6"

# Misc
commonsvalidator = "1.9.0"
# Upgrading to 12.0.1 results in task failing, DROID-1517
dependency-versions = "0.52.0"
detekt = "1.23.8"
kermit = "2.0.5"
konsist = "0.17.3"
ktfmt = "0.22.0"
leakcanary = "2.14"

# Mockk 1.14.0 is broken with value classes, avoid updating
mockk = "1.13.17"
mockwebserver = "4.12.0"
play-publisher = "3.12.1"
turbine = "1.2.0"

[libraries]
# Android
android-billingclient = { module = "com.android.billingclient:billing-ktx", version.ref = "android-billingclient" }
android-gradle-aapt = { module = "com.android.tools.build:aapt2" }

# AndroidX
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activitycompose" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-coresplashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidx-coresplashscreen" }
androidx-credentials = { module = "androidx.credentials:credentials", version.ref = "androidx-credentials" }
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "androidx-datastore" }
androidx-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
androidx-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-ktx" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidx-lifecycle" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test" }
androidx-test-monitor = { module = "androidx.test:monitor", version.ref = "androidx-testmonitor" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-testrunner" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test" }
androidx-test-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidx-uiautomator" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidx-testorchestrator" }
androidx-tv = { module = "androidx.tv:tv-material", version.ref = "androidx-tv" }

# Arrow
arrow = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
arrow-optics-ksp = { module = "io.arrow-kt:arrow-optics-ksp-plugin", version.ref = "arrow" }
arrow-resilience = { module = "io.arrow-kt:arrow-resilience", version.ref = "arrow" }

# Compose
compose-constrainlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-constraintlayout" }
compose-destinations = { module = "io.github.raamcosta.compose-destinations:core", version.ref = "compose-destinations" }
compose-destinations-ksp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "compose-destinations" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-android-preview = { module = "androidx.compose.ui:ui-tooling-preview-android", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "compose" }
accompanist-drawablepainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "drawablepainter"  }

# gRPC
grpc-okhttp = { module = "io.grpc:grpc-okhttp", version.ref = "grpc" }
grpc-android = { module = "io.grpc:grpc-android", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpc-kotlin" }
grpc-protobuf-lite = { module = "io.grpc:grpc-protobuf-lite", version.ref = "grpc" }

# Protobuf
protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobuf" }

# Koin
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-compose" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

# Kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-native-prebuilt = { module = "org.jetbrains.kotlin:kotlin-native-prebuilt", version.ref = "kotlin" }

# KotlinX
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }

# MockK
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }

# Misc
commons-validator = { module = "commons-validator:commons-validator", version.ref = "commonsvalidator" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
konsist = { module = "com.lemonappdev:konsist", version.ref = "konsist" }
leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
mockkWebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

[plugins]
# Android
android-gradle-plugin = { id = "com.android.tools.build:gradle", version.ref = "android-gradle-plugin" }
android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
android-test = { id = "com.android.test", version.ref = "android-gradle-plugin" }

# Compose
compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# Kotlin
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "kotlin-ksp" }

# Kotlinx
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinx-serialization" }

# Protobuf
protobuf-core = { id = "com.google.protobuf", version.ref = "protobuf-gradle-plugin" }
protobuf-protoc = { id = "com.google.protobuf:protoc", version.ref = "protobuf" }

# gRPC
grpc-protoc-gen-grpc-java = { id = "io.grpc:protoc-gen-grpc-java", version.ref = "grpc" }
grpc-protoc-gen-grpc-kotlin = { id = "io.grpc:protoc-gen-grpc-kotlin", version.ref = "grpc-kotlin-jar" }

# Rust Android Gradle
rust-android-gradle = { id = "org.mozilla.rust-android-gradle.rust-android", version.ref = "rust-android-gradle" }

dependency-versions = { id = "com.github.ben-manes.versions", version.ref = "dependency-versions" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktfmt = { id = "com.ncorti.ktfmt.gradle", version.ref = "ktfmt" }
play-publisher = { id = "com.github.triplet.play", version.ref = "play-publisher" }
