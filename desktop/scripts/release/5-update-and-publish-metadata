#!/usr/bin/env bash

# This script downloads the build artifacts along with the signatures, verifies the signatures and
# publishes new version metadata to Mullvads API (including latest.json).
# * This should be run after `4-make-release`.
# * You need to put the private ed25519 signing key in the clipboard before running this script.

set -eu

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPT_DIR"

if [ $# -ne 3 ]; then
    echo "Please provide the following arguments:"
    echo "    $(basename "$0") \\"
    echo "        <product version> \\"
    echo "        <build server SSH destination> \\"
    echo "        <metadata server SSH destination>"
    echo ""
    echo "Note that the metadata server SSH destination is part of the rsync command executed on the build server and will be checked against the SSH config of build@\$buildserver_host."
    exit 1
fi

PRODUCT_VERSION=$1
# The hostname (can be the alias in your ~/.ssh/config) of the build server
BUILDSERVER_HOST=$2
# The server to upload the metadata to *from* the build server (argument above)
METADATA_SERVER_HOST=$3

# shellcheck source=desktop/scripts/release/release-config.sh
source "$SCRIPT_DIR/release-config.sh"

function publish_metadata {
    local platforms
    platforms=(windows macos linux)
    local signed_dir="signed/"
    local latest_path="latest.json"
    local latest_path_prev="latest.prev.json"

    rm -rf currently_published/
    rm -rf "$latest_path_prev"

    echo ">>> Fetching current version metadata"
    mullvad-release pull --assume-yes --latest-file "${platforms[@]}"
    echo ""

    echo ">>> Backing up released data"
    cp -r $signed_dir currently_published/
    cp -f "$latest_path" "$latest_path_prev"
    echo ""

    echo ">>> Replacing work/ directory with latest published data"
    cp -rf signed/ work/
    echo ""

    echo ">>> Adding new release $PRODUCT_VERSION (rollout = 1)"
    mullvad-release add-release "$PRODUCT_VERSION" --rollout 1 "${platforms[@]}"
    echo ""

    echo ">>> Signing $PRODUCT_VERSION metadata. Reading signing key from clipboard"
    xclip -sensitive | mullvad-release sign "${platforms[@]}"
    echo ""

    echo ">>> Verifying signed metadata"
    mullvad-release verify "${platforms[@]}"
    echo ""

    echo ">>> Generating $latest_path current version metadata"
    mullvad-release query-latest "${platforms[@]}" > "$latest_path"
    echo ""

    echo ">>> New metadata including $PRODUCT_VERSION"
    git --no-pager diff --no-index -- currently_published/ $signed_dir || true
    echo ""

    echo ">>> New changes to $latest_path"
    git --no-pager diff --no-index -- "$latest_path_prev" "$latest_path" || true
    echo ""

    read -rp "Press enter to upload if the diffs look good "
    ./publish-metadata-to-api $signed_dir "$BUILDSERVER_HOST" "$METADATA_SERVER_HOST"
    ./publish-metadata-to-api $latest_path "$BUILDSERVER_HOST" "$METADATA_SERVER_HOST"
}

function remove_release_artifacts {
    echo ">>> Cleaning up $ARTIFACT_DIR"
    rm -r "$ARTIFACT_DIR"
}

./download-release-artifacts "$PRODUCT_VERSION" "$ARTIFACT_DIR"
publish_metadata
remove_release_artifacts
