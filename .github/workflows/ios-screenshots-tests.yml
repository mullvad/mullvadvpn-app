---
name: iOS test screenshots
on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - .github/workflows/ios.yml
      - ios/.swiftformat
      - ios/**/*.swift
      - ios/**/*.xctestplan
  workflow_dispatch:
jobs:
  test:
    if: github.event.pull_request.merged || github.event_name == 'workflow_dispatch'
    name: Screenshot tests
    runs-on: macos-13-xlarge
    env:
      SOURCE_PACKAGES_PATH: .spm
      TEST_ACCOUNT: ${{ secrets.IOS_TEST_ACCOUNT_NUMBER }}
      PARTNER_API_TOKEN: ${{ secrets.STAGEMOLE_PARTNER_AUTH }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure cache
        uses: actions/cache@v3
        with:
          path: ios/${{ env.SOURCE_PACKAGES_PATH }}
          key: ${{ runner.os }}-spm-${{ hashFiles('ios/**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Setup go-lang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.5

      - name: Set up yeetd to workaround XCode being slow in CI
        run: |
          wget https://github.com/biscuitehh/yeetd/releases/download/1.0/yeetd-normal.pkg
          sudo installer -pkg yeetd-normal.pkg -target /
          yeetd &
      - name: Configure Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0.1'
      - name: Configure Rust
        run: |
          rustup default stable
          rustup update stable
          rustup target add aarch64-apple-ios-sim

      - name: Configure Xcode project
        run: |
          for file in *.xcconfig.template ; do cp $file ${file//.template/} ; done
          sed -i "" \
            "/PARTNER_API_TOKEN =/ s#= .*#= $PARTNER_API_TOKEN#" \
            UITests.xcconfig
        working-directory: ios/Configurations

      - name: Install xcbeautify
        run: |
          brew update
          brew install xcbeautify

      - name: Install protobuf
        run: |
          brew update
          brew install protobuf

      - name: Run screenshot tests
        run: |
          set -o pipefail && env NSUnbufferedIO=YES xcodebuild \
            -project MullvadVPN.xcodeproj \
            -scheme MullvadVPN \
            -testPlan MullvadVPNScreenshots \
            -destination "platform=iOS Simulator,name=iPhone 15" \
            -clonedSourcePackagesDirPath "$SOURCE_PACKAGES_PATH" \
            -disableAutomaticPackageResolution \
            test 2>&1 | xcbeautify
        working-directory: ios/
