---
name: iOS app
on:
  pull_request:
    paths:
      - .github/workflows/ios.yml
      - ios/.swiftformat
      - ios/**/*.swift
      - ios/**/*.xctestplan
  workflow_dispatch:
jobs:
  check-formatting:
    name: Check formatting
    runs-on: macos-13-xlarge
    steps:
      - name: Install SwiftFormat
        run: |
          brew update
          brew upgrade swiftformat

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check formatting
        run: |
          swiftformat --version
          swiftformat --lint .
        working-directory: ios

  swiftlint:
    name: Run swiftlint
    runs-on: macos-13-xlarge
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run swiftlint
        run: |
          brew install swiftlint
          swiftlint --version
          swiftlint --reporter github-actions-logging
        working-directory: ios

  test:
    name: Unit tests
    runs-on: macos-13-xlarge
    env:
      SOURCE_PACKAGES_PATH: .spm
      TEST_ACCOUNT: ${{ secrets.IOS_TEST_ACCOUNT_NUMBER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure cache
        uses: actions/cache@v3
        with:
          path: ios/${{ env.SOURCE_PACKAGES_PATH }}
          key: ${{ runner.os }}-spm-${{ hashFiles('ios/**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Setup go-lang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.5

      - name: Set up yeetd to workaround XCode being slow in CI
        run: |
          wget https://github.com/biscuitehh/yeetd/releases/download/1.0/yeetd-normal.pkg
          sudo installer -pkg yeetd-normal.pkg -target /
          yeetd &
      - name: Configure Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0.1'
      - name: Configure Rust
        run: rustup target add aarch64-apple-ios-sim

      - name: Configure Xcode project
        run: |
          cp Base.xcconfig.template Base.xcconfig
          cp App.xcconfig.template App.xcconfig
          cp PacketTunnel.xcconfig.template PacketTunnel.xcconfig
          cp Screenshots.xcconfig.template Screenshots.xcconfig
          sed -i "" "s/MULLVAD_ACCOUNT_TOKEN = /MULLVAD_ACCOUNT_TOKEN = $TEST_ACCOUNT/g" Screenshots.xcconfig
        working-directory: ios/Configurations

      - name: Install xcbeautify
        run: |
          brew update
          brew install xcbeautify

      - name: Run unit tests
        run: |
          set -o pipefail && env NSUnbufferedIO=YES xcodebuild \
            -project MullvadVPN.xcodeproj \
            -scheme MullvadVPN \
            -testPlan MullvadVPNCI \
            -destination "platform=iOS Simulator,name=iPhone 15" \
            -clonedSourcePackagesDirPath "$SOURCE_PACKAGES_PATH" \
            test 2>&1 | xcbeautify
          set -o pipefail && env NSUnbufferedIO=YES xcodebuild \
            -project MullvadVPN.xcodeproj \
            -scheme MullvadVPN \
            -testPlan MullvadVPNScreenshots \
            -destination "platform=iOS Simulator,name=iPhone 15" \
            -clonedSourcePackagesDirPath "$SOURCE_PACKAGES_PATH" \
            test 2>&1 | xcbeautify
        working-directory: ios/
