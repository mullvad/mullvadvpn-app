// Generated by FigmaVariablesConverter
// Do not edit directly
// Generated on Sep 23, 2025
// To update, export `platform/ios` and `primitives` from Figma using `variables2css` in `json` format,
// replace the content of `variableJsonString` in `figmaVariablesConverter.swift` and run `swift figmaVariablesConverter.swift`
import SwiftUI

enum MullvadColor {
    static let black = Color("#000000")
    static let black50 = Color("#00000080")
    static let white100 = Color("#ffffff")
    static let white20 = Color("#ffffff33")
    static let white40 = Color("#ffffff66")
    static let white60 = Color("#ffffff99")
    static let white80 = Color("#ffffffcc")
    static let mullvadColorsAndroidDisabledcontainerdestructive = Color("#6a3540")
    static let mullvadColorsAndroidDisabledcontainerprimary = Color("#1f3a57")
    static let mullvadColorsAndroidDisabledcontainertiertary = Color("#2a6148")
    static let mullvadColorsBrandBlue = Color("#294d73")
    static let mullvadColorsBrandDarkblue = Color("#192e45")
    static let mullvadColorsBrandFur = Color("#d2943b")
    static let mullvadColorsBrandGreen = Color("#44ad4d")
    static let mullvadColorsBrandNose = Color("#ffcd86")
    static let mullvadColorsBrandRed = Color("#e34039")
    static let mullvadColorsBrandYellow = Color("#ffd524")
    static let mullvadColorsOpacitiesGreenAlpha = Color("#44ad4d66")
    static let mullvadColorsOpacitiesGreen40 = Color("#2a6148")
    static let mullvadColorsOpacitiesGreen80 = Color("#3b944b")
    static let mullvadColorsOpacitiesRedAlpha = Color("#e3403966")
    static let mullvadColorsOpacitiesRed40 = Color("#6a3540")
    static let mullvadColorsOpacitiesRed80 = Color("#bb3c3b")
    static let mullvadColorsOpacitiesBlueDarkBlueBlue10 = Color("#1b314a")
    static let mullvadColorsOpacitiesBlueDarkBlueBlue20 = Color("#1c344e")
    static let mullvadColorsOpacitiesBlueDarkBlueBlue40 = Color("#1f3a57")
    static let mullvadColorsOpacitiesBlueDarkBlueBlue50 = Color("#213e5c")
    static let mullvadColorsOpacitiesBlueDarkBlueBlue60 = Color("#234161")
    static let mullvadColorsOpacitiesBlueDarkBlueBlue80 = Color("#26476a")
    static let mullvadColorsOpacitiesWhiteBlueWhiteonblue10 = Color("#3e5f81")
    static let mullvadColorsOpacitiesWhiteBlueWhiteonblue20 = Color("#54718f")
    static let mullvadColorsOpacitiesWhiteBlueWhiteonblue40 = Color("#7f94ab")
    static let mullvadColorsOpacitiesWhiteBlueWhiteonblue5 = Color("#385674")
    static let mullvadColorsOpacitiesWhiteBlueWhiteonblue50 = Color("#94a6b9")
    static let mullvadColorsOpacitiesWhiteBlueWhiteonblue60 = Color("#a9b8c7")
    static let mullvadColorsOpacitiesWhiteBlueWhiteonblue80 = Color("#d4dbe3")
    static let mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue10 = Color("#304358")
    static let mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue20 = Color("#47586a")
    static let mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue40 = Color("#75828f")
    static let mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue5 = Color("#25394e")
    static let mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue50 = Color("#8c96a2")
    static let mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue60 = Color("#a3abb5")
    static let mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue80 = Color("#d1d5da")
    static let mullvadColorsOpacitiesDarkerblueDarkerblue10 = Color("#101823")
    static let mullvadColorsOpacitiesDarkerblueDarkerblue10Alpha40 = Color("#10182366")
    static let mullvadColorsOpacitiesDarkerblueDarkerblue10Alpha80 = Color("#101823cc")
    static let mullvadColorsOpacitiesDarkerblueDarkerblue50 = Color("#192638")
    static let mullvadColorsOpacitiesDarkerblueDarkerblue50Alpha80 = Color("#192638cc")
    static let newGraphicalProfileChalk100 = Color("#f8f7f1")
    static let newGraphicalProfileChalk80 = Color("#f6f2d5")
    static let newGraphicalProfileDark = Color("#4e4949")
    static let newGraphicalProfileRed = Color("#eb5d40")
    static let newGraphicalProfileOpacitiesChalk40Alpha = Color("#f8f7f166")
    static let newGraphicalProfileOpacitiesChalk80Alpha = Color("#f8f7f1cc")
    static let colorsBackgroundCanvas = mullvadColorsBrandDarkblue
    static let colorsFieldOnBackground = mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue10
    static let colorsFieldOnBackgroundDisabled = mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue5
    static let colorsFieldOnBackgroundFocused = white100
    static let colorsFieldOnBackgroundHover = mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue40
    static let colorsFieldOnPrimary = mullvadColorsOpacitiesWhiteBlueWhiteonblue10
    static let colorsFieldOnPrimaryDisabled = mullvadColorsOpacitiesWhiteBlueWhiteonblue5
    static let colorsFieldOnPrimaryFocused = white100
    static let colorsFieldOnPrimaryHover = mullvadColorsOpacitiesWhiteBlueWhiteonblue20
    static let colorsFieldStandardizedAutofill = mullvadColorsOpacitiesBlueDarkBlueBlue80
    static let colorsFieldStandardizedBackgroundDisabled = mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue5
    static let colorsFieldStandardizedBorder = newGraphicalProfileOpacitiesChalk40Alpha
    static let colorsFieldStandardizedBorderDisabled = mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue20
    static let colorsFieldStandardizedBorderError = newGraphicalProfileRed
    static let colorsFieldStandardizedBorderFocus = newGraphicalProfileChalk100
    static let colorsFieldStandardizedBorderHover = newGraphicalProfileOpacitiesChalk80Alpha
    static let colorsFieldStandardizedCursor = white100
    static let colorsIconsDisabled = white20
    static let colorsIconsFieldPrimary = mullvadColorsOpacitiesWhiteDarkBlueWhiteondarkblue60
    static let colorsIconsHeaderLinePrimary = white20
    static let colorsIconsNegative = mullvadColorsBrandRed
    static let colorsIconsNegativeDisabled = mullvadColorsOpacitiesRedAlpha
    static let colorsIconsPositive = mullvadColorsBrandGreen
    static let colorsIconsPositiveDisabled = mullvadColorsOpacitiesGreenAlpha
    static let colorsIconsPrimary = white100
    static let colorsIconsPrimaryHover = white100
    static let colorsIconsSecondary = white60
    static let colorsIconsSecondaryHover = white100
    static let colorsIconsWarning = mullvadColorsBrandYellow
    static let colorsLogoBackground = mullvadColorsBrandDarkblue
    static let colorsLogoFur = mullvadColorsBrandFur
    static let colorsLogoHelmet = mullvadColorsBrandYellow
    static let colorsLogoLampAndText = white100
    static let colorsLogoNose = mullvadColorsBrandNose
    static let colorsOverlaySolid = mullvadColorsOpacitiesDarkerblueDarkerblue50
    static let colorsOverlaySolid80 = mullvadColorsOpacitiesDarkerblueDarkerblue50Alpha80
    static let colorsOverlaySolidDark = mullvadColorsOpacitiesDarkerblueDarkerblue10
    static let colorsOverlaySolidDark40 = mullvadColorsOpacitiesDarkerblueDarkerblue10Alpha40
    static let colorsOverlaySolidDark80 = mullvadColorsOpacitiesDarkerblueDarkerblue10Alpha80
    static let colorsSurfaceNegative = mullvadColorsBrandRed
    static let colorsSurfaceNegativeDisabled = mullvadColorsOpacitiesRed40
    static let colorsSurfaceNegativeHighlight = mullvadColorsOpacitiesRed80
    static let colorsSurfacePositive = mullvadColorsBrandGreen
    static let colorsSurfacePositiveDisabled = mullvadColorsOpacitiesGreen40
    static let colorsSurfacePositiveHighlight = mullvadColorsOpacitiesGreen80
    static let colorsSurfacePrimary = mullvadColorsBrandBlue
    static let colorsSurfacePrimaryDark = mullvadColorsOpacitiesDarkerblueDarkerblue50
    static let colorsSurfacePrimaryDisabled = colorsSurfaceTertiary
    static let colorsSurfacePrimaryHighlight = mullvadColorsOpacitiesWhiteBlueWhiteonblue10
    static let colorsSurfacePrimaryPressed = mullvadColorsOpacitiesWhiteBlueWhiteonblue20
    static let colorsSurfaceQuaternary = mullvadColorsOpacitiesBlueDarkBlueBlue20
    static let colorsSurfaceQuinary = mullvadColorsOpacitiesBlueDarkBlueBlue10
    static let colorsSurfaceSecondary = mullvadColorsOpacitiesBlueDarkBlueBlue60
    static let colorsSurfaceTertiary = mullvadColorsOpacitiesBlueDarkBlueBlue40
    static let colorsSurfaceWhite = white100
    static let colorsTextBody = newGraphicalProfileOpacitiesChalk80Alpha
    static let colorsTextCursor = colorsBackgroundCanvas
    static let colorsTextDisabled = white20
    static let colorsTextError = mullvadColorsBrandRed
    static let colorsTextInput = mullvadColorsBrandBlue
    static let colorsTextInputPlaceholder = mullvadColorsOpacitiesWhiteBlueWhiteonblue60
    static let colorsTextLink = newGraphicalProfileChalk100
    static let colorsTextLinkHover = white60
    static let colorsTextLinkPressed = white20
    static let colorsTextOnBackground60 = white60
    static let colorsTextOnBackgroundEmphasis100 = white100
    static let colorsTextOnInteractive100 = white100
    static let colorsTextOnInteractiveSecondary60 = white60
    static let colorsTextSuccess = mullvadColorsBrandGreen
    static let componentsBottomSegmentColorsBackground = colorsSurfacePrimaryDark
    static let componentsBottomSegmentColorsTextHeader = colorsTextOnBackground60
    static let componentsButtonColorsNegative = colorsSurfaceNegative
    static let componentsButtonColorsNegativeDisabled = colorsSurfaceNegativeDisabled
    static let componentsButtonColorsNegativeHoverFocus = colorsSurfaceNegativeHighlight
    static let componentsButtonColorsPositive = colorsSurfacePositive
    static let componentsButtonColorsPositiveDisabled = colorsSurfacePositiveDisabled
    static let componentsButtonColorsPositiveHoverFocus = colorsSurfacePositiveHighlight
    static let componentsButtonColorsPositivePressed = componentsButtonColorsPositiveDisabled
    static let componentsButtonColorsPrimary = colorsSurfacePrimary
    static let componentsButtonColorsPrimaryDisabled = colorsSurfacePrimaryDisabled
    static let componentsButtonColorsPrimaryHover = colorsSurfaceSecondary
    static let componentsButtonColorsPrimaryPressed = colorsSurfacePrimary
    static let componentsDashboardColorsBackgroundCollapsed = colorsOverlaySolidDark40
    static let componentsDashboardColorsBackgroundExpanded = colorsOverlaySolidDark80
    static let componentsDashboardColorsConnectionConnected = colorsTextSuccess
    static let componentsDashboardColorsConnectionDisconnectedOrFailed = colorsTextError
    static let componentsDashboardColorsConnectionNeutralOrBlocked = colorsTextOnInteractive100
    static let componentsDialogColorsBackground = colorsBackgroundCanvas
    static let componentsDialogColorsOverlay = black50
    static let componentsDropdownColorsDefault = colorsFieldOnPrimary
    static let componentsDropdownColorsDisabled = colorsFieldOnPrimaryDisabled
    static let componentsDropdownColorsDivider = colorsSurfacePrimary
    static let componentsDropdownColorsHover = colorsFieldOnPrimaryHover
    static let componentsDropdownColorsSelected = colorsFieldOnPrimaryHover
    static let componentsFeatureIndicatorColorBackground = colorsSurfaceQuinary
    static let componentsFeatureIndicatorColorBorder = colorsSurfacePrimary
    static let componentsFeatureIndicatorColorBorderHover = colorsFieldStandardizedBorderHover
    static let componentsFeatureIndicatorColorBorderPressed = colorsFieldStandardizedBorderFocus
    static let componentsFilterChipColorsDefault = colorsSurfacePrimary
    static let componentsFilterChipColorsDisabled = colorsSurfaceQuaternary
    static let componentsFilterChipColorsIcon = colorsIconsPrimary
    static let componentsFormColorsDefault = colorsSurfacePrimary
    static let componentsFormColorsDisabled = colorsSurfaceTertiary
    static let componentsFormColorsDivider = colorsBackgroundCanvas
    static let componentsFormColorsErrorBorder = colorsSurfaceNegative
    static let componentsFormColorsFocusBorder = colorsSurfaceWhite
    static let componentsInAppBannerColorsBackground = colorsOverlaySolid
    static let componentsListItemColorsDivider = colorsBackgroundCanvas
    static let componentsListItemColorsHover = colorsSurfacePrimaryHighlight
    static let componentsListItemColorsInput = colorsSurfaceWhite
    static let componentsListItemColorsPressed = colorsSurfacePrimaryPressed
    static let componentsListItemColorsHeirarchyChild1 = colorsSurfaceSecondary
    static let componentsListItemColorsHeirarchyChild1Disabled = colorsSurfacePrimaryDisabled
    static let componentsListItemColorsHeirarchyChild2 = colorsSurfaceTertiary
    static let componentsListItemColorsHeirarchyChild2Disabled = colorsSurfaceQuaternary
    static let componentsListItemColorsHeirarchyChild3 = colorsSurfaceQuaternary
    static let componentsListItemColorsHeirarchyChild3Disabled = colorsSurfaceQuinary
    static let componentsListItemColorsHeirarchyChild4 = colorsSurfaceQuinary
    static let componentsListItemColorsHeirarchyChild4Disabled = colorsSurfaceQuinary
    static let componentsListItemColorsHeirarchyParent = colorsSurfacePrimary
    static let componentsListItemColorsHeirarchyPrimaryDisabled = colorsSurfacePrimaryDisabled
    static let componentsListItemColorsHeirarchySelected = colorsSurfacePositive
    static let componentsListItemColorsStatusDisabled = colorsIconsFieldPrimary
    static let componentsListItemColorsStatusOffline = colorsIconsNegative
    static let componentsListItemColorsStatusOnline = colorsIconsPositive
    static let componentsListItemColorsTextSupporting = colorsTextOnInteractiveSecondary60
    static let componentsListItemColorsTextfieldDefault = colorsFieldOnPrimary
    static let componentsListItemColorsTextfieldDisabled = colorsFieldOnPrimaryDisabled
    static let componentsListItemColorsTextfieldFocused = colorsFieldOnPrimaryFocused
    static let componentsListItemColorsTextfieldHover = colorsFieldOnPrimaryHover
    static let componentsListItemNewColorListItemChild1 = componentsListItemColorsHeirarchyChild2
    static let componentsListItemNewColorListItemChild2 = componentsListItemColorsHeirarchyChild3
    static let componentsListItemNewColorListItemChild3 = componentsListItemColorsHeirarchyChild4
    static let componentsListItemNewColorListItemParent = componentsListItemColorsHeirarchyChild1
    static let componentsListItemNewColorSurface = colorsOverlaySolidDark
    static let componentsLoginColorsBackgroundDefault = colorsSurfaceWhite
    static let componentsLoginColorsBackgroundLoggingIn = mullvadColorsOpacitiesWhiteBlueWhiteonblue60
    static let componentsLoginColorsButtonLogin = colorsSurfacePositive
    static let componentsLoginColorsDefaultBorder = mullvadColorsBrandDarkblue
    static let componentsLoginColorsErrorBorder = colorsSurfaceNegative
    static let componentsLoginColorsIcon = mullvadColorsOpacitiesWhiteBlueWhiteonblue20
    static let componentsLoginColorsSuggestion = mullvadColorsOpacitiesWhiteBlueWhiteonblue80
    static let componentsLoginIndicatorBadgeBackground = white100
    static let componentsLoginIndicatorBadgeNegativeCross = colorsIconsNegative
    static let componentsLoginIndicatorBadgePositiveCheckmark = colorsIconsPositive
    static let componentsLoginIndicatorSpinnerRotator = white100
    static let componentsLoginIndicatorSpinnerTrack = white20
    static let componentsMainHeaderDeviceInfoText = colorsTextOnBackground60
    static let componentsMainHeaderIcons = colorsIconsPrimary
    static let componentsMenuColorsBackground = colorsSurfaceTertiary
    static let componentsMenuColorsBorder = colorsBackgroundCanvas
    static let componentsMenuColorsDivider = colorsBackgroundCanvas
    static let componentsNavigationHeaderColorsBackground = colorsBackgroundCanvas
    static let componentsNavigationHeaderColorsIcons = colorsIconsSecondary
    static let componentsOptionColorsDisabled = colorsFieldOnPrimaryDisabled
    static let componentsOptionColorsHover = colorsSurfacePrimary
    static let componentsProblemReportColorsBackground = colorsSurfaceWhite
    static let componentsProgressIndicatorColorsIndicatorActive = colorsSurfaceWhite
    static let componentsProgressIndicatorColorsIndicatorPaused = white20
    static let componentsProgressIndicatorColorsTrack = colorsSurfaceQuinary
    static let componentsSearchColorsDefault = colorsFieldOnBackground
    static let componentsSearchColorsDisabled = colorsFieldOnBackgroundDisabled
    static let componentsSearchColorsFocused = colorsSurfaceWhite
    static let componentsSearchColorsHover = colorsFieldOnBackgroundHover
    static let componentsSectionTitleColorsIcon = colorsIconsPrimary
    static let componentsSegmentedControlColorsBackground = colorsSurfaceSecondary
    static let componentsSegmentedControlColorsContainer = componentsSegmentedControlColorsBackground
    static let componentsSegmentedControlColorsSelected = colorsSurfacePositive
    static let componentsSwitchColorsOff = colorsSurfaceNegative
    static let componentsSwitchColorsOffDisabled = colorsSurfaceNegativeDisabled
    static let componentsSwitchColorsOn = colorsSurfacePositive
    static let componentsSwitchColorsOnDisabled = colorsSurfacePositiveDisabled
    static let componentsSwitchColorsTrack = colorsSurfaceWhite
    static let componentsSwitchColorsTrackDisabled = white20
    static let componentsTextfieldColorsBackground = colorsSurfaceTertiary
    static let componentsTextfieldColorsBackgroundDisabled = colorsFieldStandardizedBackgroundDisabled
    static let componentsTextfieldColorsBorder = colorsFieldStandardizedBorder
    static let componentsTextfieldColorsBorderDisabled = colorsFieldStandardizedBorderDisabled
    static let componentsTextfieldColorsBorderError = colorsFieldStandardizedBorderError
    static let componentsTextfieldColorsBorderFocus = colorsFieldStandardizedBorderFocus
    static let componentsTextfieldColorsBorderHover = colorsFieldStandardizedBorderHover
    static let componentsTextfieldColorsCursor = colorsFieldStandardizedCursor
    static let componentsTextfieldColorsSuggestion = colorsFieldStandardizedAutofill
    static let componentsTextfieldColorsTextDisabled = colorsTextDisabled
    static let componentsTextfieldColorsTextInput = colorsTextOnBackgroundEmphasis100
    static let componentsTextfieldColorsTextLabelSupporting = colorsTextOnBackgroundEmphasis100
    static let componentsTextfieldColorsTextLabelSupportingLoading = colorsTextOnBackground60
    static let componentsTextfieldColorsTextPlaceholder = colorsTextOnBackground60
    static let globalElevatedContainerBackground = colorsOverlaySolidDark80
}

enum MullvadUIMetrics {
    static let valuesBlur = CGFloat(12)
    static let valuesRadiusRa4 = CGFloat(4)
    static let valuesRadiusRa8 = CGFloat(8)
    static let valuesRadiusRa12 = CGFloat(12)
    static let valuesRadiusRa16 = CGFloat(16)
    static let valuesSpacingSpc1 = CGFloat(1)
    static let valuesSpacingSpc2 = CGFloat(2)
    static let valuesSpacingSpc4 = CGFloat(4)
    static let valuesSpacingSpc6 = CGFloat(6)
    static let valuesSpacingSpc8 = CGFloat(8)
    static let valuesSpacingSpc12 = CGFloat(12)
    static let valuesSpacingSpc16 = CGFloat(16)
    static let valuesSpacingSpc24 = CGFloat(24)
    static let valuesSpacingSpc32 = CGFloat(32)
    static let valuesSpacingSpc40 = CGFloat(40)
    static let valuesSpacingSpc48 = CGFloat(48)
    static let valuesSpacingSpc56 = CGFloat(56)
    static let valuesSpacingSpc64 = CGFloat(64)
    static let valuesSpacingSpc72 = CGFloat(72)
    static let valuesSpacingSpc80 = CGFloat(80)
    static let minWidth = CGFloat(48)
    static let componentsBottomSegmentDimensionsPaddingLeftRight = valuesSpacingSpc16
    static let componentsBottomSegmentDimensionsPaddingTop = valuesSpacingSpc24
    static let componentsButtonDimensionsRadius = valuesRadiusRa12
    static let componentsButtonDimensionsRadiusBig = CGFloat(40)
    static let componentsButtonDimensionsHeightMin = CGFloat(44)
    static let componentsButtonDimensionsHeightMinWithTouchTarget = CGFloat(44)
    static let componentsButtonDimensionsWidthMin = CGFloat(160)
    static let componentsButtonDimensionsWidthFullMin = CGFloat(343)
    static let componentsButtonDimensionsWidthFullMax = CGFloat(448)
    static let componentsButtonSplitButtonDimensionsWidthMax = CGFloat(44)
    static let componentsButtonSplitButtonDimensionsWidthMin = CGFloat(44)
    static let componentsCarouselGalleryDimensionsIllustrationHeight = CGFloat(107.19000244140625)
    static let componentsCarouselGalleryDimensionsWidth = CGFloat(343)
    static let componentsDashboardDimensionsBlur = CGFloat(0)
    static let componentsDashboardDimensionsRadius = valuesRadiusRa12
    static let componentsDashboardDimensionsWidthMax = globalElevatedContainerMaxWidth
    static let componentsDashboardDimensionsWidthMin = globalElevatedContainerMinWidth
    static let componentsDashboardSpacingGapFeatureIndicators = CGFloat(0)
    static let componentsDashboardSpacingGapLabelToIndicators = CGFloat(0)
    static let componentsDashboardSpacingPaddingButtonTopBottom = CGFloat(0)
    static let componentsDashboardSpacingPaddingIndicatorsTop = CGFloat(0)
    static let componentsDashboardSpacingGapLabelToConnectionDetails = valuesSpacingSpc8
    static let componentsDashboardSpacingPaddingConnectionDetails = valuesSpacingSpc8
    static let componentsDashboardSpacingPaddingServerBottom = valuesSpacingSpc8
    static let componentsDashboardSpacingGapButtons = valuesSpacingSpc16
    static let componentsDashboardSpacingGapDetailsToButtons = valuesSpacingSpc16
    static let componentsDashboardSpacingPaddingContentsTop = valuesSpacingSpc16
    static let componentsDashboardSpacingBackgroundPaddingBottom = valuesSpacingSpc16
    static let componentsDashboardSpacingBackgroundPaddingLeftRight = valuesSpacingSpc16
    static let componentsDashboardSpacingBackgroundPaddingTop = valuesSpacingSpc16
    static let componentsDialogDimensionsRadius = valuesRadiusRa12
    static let componentsDialogDimensionsOverlayWidthMin = globalDimensionsScreenSizesSmallestWidthMin
    static let componentsDialogDimensionsWidthMin = CGFloat(343)
    static let componentsDialogDimensionsWidthMax = CGFloat(560)
    static let componentsDialogDimensionsOverlayHeightMin = CGFloat(667)
    static let componentsDialogSpacingGapTitleToText = valuesSpacingSpc8
    static let componentsDialogSpacingGapConent = CGFloat(16)
    static let componentsDialogSpacingOverlayPaddingLeftRight = globalSpacingPaddingLeftRight
    static let componentsDialogSpacingPaddingContainerAllSides = globalSpacingPaddingLeftRight
    static let componentsDropdownDimensionsRadius = valuesRadiusRa4
    static let componentsFeatureIndicatorDimensionsHeightMin = CGFloat(0)
    static let componentsFeatureIndicatorDimensionsRadius = componentsFilterChipDimensionsRadius
    static let componentsFeatureIndicatorDimensionsTouchTarget = CGFloat(8)
    static let componentsFeatureIndicatorSpacingPaddingRightLeft = CGFloat(0)
    static let componentsFeatureIndicatorSpacingPaddingTopBottom = CGFloat(4)
    static let componentsFilterChipDimensionsRadius = valuesRadiusRa8
    static let componentsFilterChipDimensionsIconSize = CGFloat(16)
    static let componentsFilterChipDimensionsHeight = CGFloat(32)
    static let componentsFilterChipDimensionsHeightTouchTarget = CGFloat(44)
    static let componentsFilterChipSpacingGapTextToIcon = valuesSpacingSpc4
    static let componentsFilterChipSpacingPaddingTopBottom = valuesSpacingSpc4
    static let componentsFilterChipSpacingPaddingLeftRight = valuesSpacingSpc8
    static let componentsFormDimensionsRadius = CGFloat(10)
    static let componentsFormSpacingGapLabelToForm = CGFloat(6)
    static let componentsInAppBannerDimensionsGapContent = CGFloat(0)
    static let componentsInAppBannerDimensionsPaddingIconRightNotInUse = CGFloat(6)
    static let componentsInAppBannerDimensionsPaddingIconLeft = CGFloat(8)
    static let componentsInAppBannerDimensionsPaddingTopBottom = CGFloat(8)
    static let componentsInAppBannerDimensionsPaddingLeft = CGFloat(16)
    static let componentsInAppBannerDimensionsPaddingTextLeftRightNotInUse = CGFloat(16)
    static let componentsInAppBannerDimensionsIconSize = CGFloat(24)
    static let componentsInAppBannerDimensionsIconTouchTargetSize = CGFloat(44)
    static let componentsInAppBannerDimensionsWidthMin = CGFloat(375)
    static let componentsListItemDimensionsHeightMin = CGFloat(56)
    static let componentsListItemDimensionsWidthMin = CGFloat(375)
    static let componentsListItemNewDimensionsRadiusContainerNotRounded = CGFloat(0)
    static let componentsListItemNewDimensionsButtonGapHorizontal = valuesSpacingSpc1
    static let componentsListItemNewDimensionsGapLocationStack = valuesSpacingSpc1
    static let componentsListItemNewDimensionsGapParentsStack = valuesSpacingSpc4
    static let componentsListItemNewDimensionsPaddingBottom = valuesSpacingSpc4
    static let componentsListItemNewDimensionsRadiusContainerRounded = valuesRadiusRa16
    static let componentsListItemNewDimensionsTouchTarget = globalDimensionsTouchTargetMin
    static let componentsListItemNewDimensionsHeightMin = componentsListItemDimensionsHeightMin
    static let componentsListItemNewDimensionsExpandButtonWidthMin = componentsListItemTrailingDimensionsWidthMin
    static let componentsListItemNewDimensionsContianerWidthMin = globalElevatedContainerMinWidth
    static let componentsListItemNewDimensionsLocationButtonWidthMin = globalElevatedContainerMinWidth
    static let componentsListItemSpacingGapText = CGFloat(0)
    static let componentsListItemSpacingPaddingTextContainer = CGFloat(8)
    static let componentsListItemTrailingNewMarginGap = CGFloat(2)
    static let componentsListItemTrailingNewMinHeight = CGFloat(48)
    static let componentsListItemTrailingNewEndPaddingRight = CGFloat(0)
    static let componentsListItemTrailingNewEndMinWidth = CGFloat(48)
    static let componentsListItemTrailingNewExtraMinWidth = CGFloat(48)
    static let componentsListItemTrailingDimensionsWidthMin = CGFloat(56)
    static let componentsListItemTrailingIconButtonSpacingPaddingLeftRight = componentsListItemTrailingTextButtonSpacingPaddingLeftRight
    static let componentsListItemTrailingIconSpacingGap = CGFloat(4)
    static let componentsListItemTrailingIconSpacingPaddingLeft = CGFloat(8)
    static let componentsListItemTrailingIconSpacingPaddingRight = CGFloat(16)
    static let componentsListItemTrailingSecondarySpacingPaddingLeftRight = CGFloat(0)
    static let componentsListItemTrailingSpacingPaddingRight = CGFloat(16)
    static let componentsListItemTrailingSwitchSpacingPaddingLeft = CGFloat(6)
    static let componentsListItemTrailingSwitchSpacingUnassignedPaddingRight = CGFloat(16)
    static let componentsListItemTrailingTextButtonDimensionsTouchTarget = CGFloat(44)
    static let componentsListItemTrailingTextButtonSpacingPaddingLeftRight = valuesSpacingSpc16
    static let componentsListItemTrailingTextFieldDimensionsHeightMin = CGFloat(36)
    static let componentsListItemTrailingTextFieldSpacingPaddingLeft = CGFloat(8)
    static let componentsLocationMarkerDimensionsSize = CGFloat(60)
    static let componentsLoginDimensionsRadius = valuesRadiusRa8
    static let componentsMainHeaderDimensionsRadius = CGFloat(0)
    static let componentsMainHeaderDimensionsGapLogoDevice = CGFloat(2)
    static let componentsMainHeaderDimensionsPaddingLogoIconsTopBottom = CGFloat(4)
    static let componentsMainHeaderDimensionsGapIcons = CGFloat(8)
    static let componentsMainHeaderDimensionsPaddingBottom = CGFloat(8)
    static let componentsMainHeaderDimensionsPaddingRight = CGFloat(10)
    static let componentsMainHeaderDimensionsPaddingLeft = CGFloat(16)
    static let componentsMainHeaderDimensionsGapNameTimeLeft = CGFloat(24)
    static let componentsMainHeaderDimensionsPaddingTop = CGFloat(24)
    static let componentsMainHeaderDimensionsTouchTarget = globalDimensionsTouchTargetMin
    static let componentsMainHeaderDimensionsIconSize = CGFloat(32)
    static let componentsMainHeaderDimensionsLogoMinHeight = CGFloat(44)
    static let componentsMainHeaderDimensionsHeightMin = CGFloat(68)
    static let componentsMainHeaderDimensionsLogoMinWidth = CGFloat(219)
    static let componentsMainHeaderDimensionsWidthMin = CGFloat(375)
    static let componentsMenuDimensionsRadius = valuesRadiusRa4
    static let componentsNavigationHeaderDimensionsRadius = valuesRadiusRa8
    static let componentsNavigationHeaderDimensionsWidthMin = globalDimensionsScreenSizesSmallestWidthMin
    static let componentsNavigationHeaderDimensionsSpacingGapLeadingIconText = CGFloat(-2)
    static let componentsNavigationHeaderDimensionsSpacingGapTrailing = CGFloat(0)
    static let componentsNavigationHeaderDimensionsSpacingPaddingTopbarLeftRight = CGFloat(6)
    static let componentsNavigationHeaderDimensionsSpacingPaddingTopbarBottom = CGFloat(10)
    static let componentsNavigationHeaderDimensionsSpacingGapContent = CGFloat(16)
    static let componentsNavigationHeaderDimensionsSpacingPaddingBottom = CGFloat(16)
    static let componentsNavigationHeaderDimensionsSpacingPaddingContentLeftRight = CGFloat(16)
    static let componentsNavigationHeaderDimensionsSpacingPaddingTextBottom = CGFloat(16)
    static let componentsNavigationHeaderDimensionsSpacingPaddingTop = CGFloat(16)
    static let componentsNavigationHeaderDimensionsSpacingIconTouchTarget = globalDimensionsTouchTargetMin
    static let componentsOptionDimensionsRadius = valuesRadiusRa4
    static let componentsProblemReportDimensionsRadius = valuesRadiusRa4
    static let componentsSearchDimensionsRadius = valuesRadiusRa8
    static let componentsSectionTitleDimensionsIconGap = CGFloat(0)
    static let componentsSectionTitleDimensionsDividerGap = CGFloat(8)
    static let componentsSectionTitleDimensionsMinHeight = globalDimensionsTouchTargetMin
    static let componentsSectionTitleDimensionsTouchTarget = CGFloat(44)
    static let componentsSectionTitleDimensionsMinWidth = globalDimensionsFullWithMargin
    static let componentsSegmentedControlDimensionsRadiusButtonInner = valuesRadiusRa8
    static let componentsSegmentedControlDimensionsRadiusButtonOuter = valuesRadiusRa8
    static let componentsSegmentedControlDimensionsRadiusContainer = CGFloat(8)
    static let componentsSegmentedControlDimensionsButtonHeightMin = CGFloat(38)
    static let componentsSegmentedControlDimensionsContainerHeightMin = CGFloat(42)
    static let componentsSegmentedControlDimensionsButtonWidthMin = CGFloat(161)
    static let componentsSegmentedControlDimensionsContainerWidthMin = CGFloat(327)
    static let componentsSegmentedControlSpacingPaddingLeftRight = CGFloat(2)
    static let componentsSegmentedControlSpacingPaddingTopBottom = valuesSpacingSpc4
    static let componentsSwitchDimensionsIndicatorSize = CGFloat(22)
    static let componentsSwitchDimensionsIndicatorSizeHover = CGFloat(24)
    static let componentsSwitchDimensionsTrackHeightMin = CGFloat(30)
    static let componentsSwitchDimensionsContainerHeight = CGFloat(44)
    static let componentsSwitchDimensionsContainerWidth = CGFloat(48)
    static let componentsSwitchDimensionsTrackWidthMin = CGFloat(48)
    static let componentsSwitchSpacingPaddingIndicatorHover = CGFloat(3)
    static let componentsSwitchSpacingPaddingIndicator = CGFloat(4)
    static let componentsTextfieldDimensionsRadius = valuesRadiusRa4
    static let componentsTextfieldDimensionsRadiusSecondary = valuesRadiusRa12
    static let componentsTextfieldDimensionsSupportingIconSize = CGFloat(18)
    static let componentsTextfieldDimensionsIconSize = CGFloat(24)
    static let componentsTextfieldDimensionsHeightSecondaryMin = CGFloat(36)
    static let componentsTextfieldDimensionsHeightMin = CGFloat(44)
    static let componentsTextfieldSpacingGapInputToIcon = valuesSpacingSpc4
    static let componentsTextfieldSpacingGapLabelSupportToForm = valuesSpacingSpc8
    static let componentsTextfieldSpacingPaddingForm = valuesSpacingSpc8
    static let fontsLineHeightMini = CGFloat(18)
    static let fontsLineHeightTiny = CGFloat(20)
    static let fontsLineHeightSmall = CGFloat(22)
    static let fontsLineHeightMedium = CGFloat(25)
    static let fontsLineHeightLarge = CGFloat(34)
    static let fontsLineHeightBig = CGFloat(41)
    static let fontsSizeMini = CGFloat(13)
    static let fontsSizeTiny = CGFloat(15)
    static let fontsSizeSmall = CGFloat(17)
    static let fontsSizeMedium = CGFloat(20)
    static let fontsSizeLarge = CGFloat(28)
    static let fontsSizeBig = CGFloat(34)
    static let fontsSpacingDefault = CGFloat(-0.4000000059604645)
    static let globalDimensionsTouchTargetMin = CGFloat(44)
    static let globalDimensionsFullInDialog = CGFloat(311)
    static let globalDimensionsFullWithMargin = CGFloat(343)
    static let globalDimensionsFull = CGFloat(375)
    static let globalDimensionsScreenSizesSmallestWidthMin = CGFloat(375)
    static let globalDimensionsScreenSizesSmallestHeightMin = CGFloat(812)
    static let globalElevatedContainerRadius = CGFloat(12)
    static let globalElevatedContainerMinWidth = CGFloat(343)
    static let globalElevatedContainerMaxWidth = CGFloat(480)
    static let globalSpacingPaddingLeftRight = CGFloat(16)
    static let globalSpacingGapContent = CGFloat(24)
    static let globalSpacingPaddingBottom = CGFloat(24)
    static let globalSpacingPaddingGapList = CGFloat(24)
    static let globalSpacingNonScopedTiny4 = valuesSpacingSpc4
    static let globalSpacingNonScopedSmall8 = valuesSpacingSpc8
    static let globalSpacingNonScopedMedium16 = valuesSpacingSpc16
    static let globalSpacingNonScopedLarge24 = valuesSpacingSpc24
    static let globalSpacingNonScopedBig32 = valuesSpacingSpc32
}
